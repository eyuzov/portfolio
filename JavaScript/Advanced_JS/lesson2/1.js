// Представьте, что у вас есть класс для управления библиотекой.
// В этом классе будет приватное свойство для хранения списка книг, а также методы для добавления книги, удаления книги и
// получения информации о наличии книги.

// Класс должен содержать приватное свойство #books, которое инициализируется пустым массивом и представляет собой список книг в библиотеке.

// Реализуйте геттер allBooks, который возвращает текущий список книг.

// Реализуйте метод addBook(title), который позволяет добавлять книгу в список.
// Если книга с таким названием уже существует в списке, выбросьте ошибку с соответствующим сообщением.

// Реализуйте метод removeBook(title), который позволит удалять книгу из списка по названию.
// Если книги с таким названием нет в списке, выбросьте ошибку с соответствующим сообщением.

// Реализуйте метод hasBook(title), который будет проверять наличие книги в библиотеке и возвращать true или false в зависимости от того,
// есть ли такая книга в списке или нет.

// Реализуйте конструктор, который принимает начальный список книг (массив) в качестве аргумента.
// Убедитесь, что предоставленный массив не содержит дубликатов; в противном случае выбрасывайте ошибку.

class Biblio {
  #books = [];
  get allBooks() {
    console.log(this.#books);
  }
  addBook(book) {
    if (this.#books.includes(book)) {
      throw new Error(`Книга с заголовком "${book}" уже есть в библиотеке!`);
    } else this.#books.push(book);
  }
  removeBook(book) {
    if (!this.#books.includes(book)) {
      throw new Error(`Книги с заголовком "${book}" нет в библиотеке!`);
    } else {
      const a = this.#books.indexOf(book);
      this.#books.splice(a, 1);
    }
  }
  hasBook(book) {
    console.log(this.#books.includes(book));
  }
  constructor(arrBooks) {
    const unique = [...new Set(arrBooks)];
    const diff = arrBooks.length - unique.length;
    if (diff > 0) {
      throw new Error(`В библиотеке есть дубликаты!`);
    }
    this.#books = arrBooks;
  }
}

const biblio1 = new Biblio(["q", "w", "e"]);
// biblio1.addBook("r");
// biblio1.removeBook("x");
// biblio1.hasBook("d");

biblio1.allBooks;
